"use strict";var precacheConfig=[["/index.html","0e7ffd6c02449a3f333d3c4877f4e2f8"],["/static/css/main.756ad286.css","ff337f30ad6e9af1e0a37605f06a623a"],["/static/js/main.5adcc985.js","5db218b3f959ddefcf0f09b53765d0c5"],["/static/media/EvergreenLogo.ae9e6411.png","ae9e64116c1a8c75b4c51e4158f210ca"],["/static/media/MobileAboutBackground.52f0f44b.png","52f0f44b41cc30a443b4ac03995b1aa9"],["/static/media/MobileServicesBackground.e82a2f6d.jpg","e82a2f6dc83b6d5e5d9163ff80d309ca"],["/static/media/image1.b02465f6.png","b02465f6286f9b8071a8a4885fecf632"],["/static/media/image10.419b0c10.png","419b0c1055db5699f30c74d7a2c48879"],["/static/media/image11.0d981f57.png","0d981f57e1872800fd449888157f84c4"],["/static/media/image14.0cf5b3d3.png","0cf5b3d3a83f73116bd2859ffe10f68b"],["/static/media/image15.7d758afa.png","7d758afa06ce2860141470b1bb0e894f"],["/static/media/image16.9aa23b39.png","9aa23b396d948b894d67159b134a8e4b"],["/static/media/image2.1cd35704.png","1cd35704109401de8ba28ccc995a4513"],["/static/media/image3.cde1c7e0.png","cde1c7e003bb213a67c91d931244d20b"],["/static/media/image4.a8e6508c.png","a8e6508c396fb23c15efb15687a72957"],["/static/media/image5.473d2f7a.png","473d2f7a38c23e9be17538047f1d44cd"],["/static/media/image6.e61c4681.png","e61c4681d86970fa32696afb4d45424d"],["/static/media/image7.b58afa12.png","b58afa125d851ac88e677a568bd103fd"],["/static/media/image8.dd91e41d.png","dd91e41deba6e58164f31a537a4b78f2"],["/static/media/image9.90fd2d16.png","90fd2d16a533b2d3a9ee77bd7a342dff"],["/static/media/sample.f5fc9ef1.jpg","f5fc9ef172c9e8f5e6ec2db3bb31f90c"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(a){return a.redirected?("body"in a?Promise.resolve(a.body):a.blob()).then(function(e){return new Response(e,{headers:a.headers,status:a.status,statusText:a.statusText})}):Promise.resolve(a)},createCacheKey=function(e,a,t,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),c.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(a){return t.every(function(e){return!e.test(a[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],n=new URL(a,self.location),c=createCacheKey(n,hashParamName,t,/\.\w{8}\./);return[n.toString(),c]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var e=new Request(a,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+a+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(a,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(a){return a.keys().then(function(e){return Promise.all(e.map(function(e){if(!t.has(e.url))return a.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(a){if("GET"===a.request.method){var e,t=stripIgnoredUrlParameters(a.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,n),e=urlsToCacheKeys.has(t));var c="/index.html";!e&&"navigate"===a.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],a.request.url)&&(t=new URL(c,self.location).toString(),e=urlsToCacheKeys.has(t)),e&&a.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',a.request.url,e),fetch(a.request)}))}});